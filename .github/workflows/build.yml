name: Build props

on:
  workflow_dispatch:
    inputs:
      device_name:
        description: "Device Name"
        required: true
        default: "cheetah"
        type: choice
        # TODO: this options choice is all current google ota device
        # but... not all work idk. rn. ;(
        options:
          - cheetah
          - panther
          - bluejay
          - oriole
          - raven
          - barbet
          - redfin
          - bramble
          - sunfish
          - coral
          - flame
          - bonito
          - sargo
          - crosshatch
          - blueline
          - taimen
          - walleye
          - sailfish
          - ryu
          - angler
          - bullhead
          - hammerhead
          - shamu
          - razor
          - razorg
          - volantisg
          - volantis
          - fugu

jobs:
  build:
    name: Build props
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install APT packages
        uses: daaku/gh-action-apt-install@v4
        with:
          packages: dos2unix python3 python3-pip zip

      - name: Install protobuf
        run: |
          pip install --upgrade pip
          pip3 install -Iv protobuf==3.20.3

      - name: Make all scripts executable
        run: chmod +x *.sh

      - name: Download latest OTA build for ${{ github.event.inputs.device_name }}
        run: ./download_latest_ota_build.sh ${{ github.event.inputs.device_name }}

      - name: Extract images and build props
        run: ./extract_images.sh

      - name: Prepare for upload
        id: prepare
        run: |
          mkdir -p result

          source ./.TEMP_BUILD_INFO
          BASE_NAME=$DEVICE_CODE_NAME_TITLE.A$DEVICE_BUILD_ANDROID_VERSION.$DEVICE_BUILD_SECURITY_PATCH"

          cp ./**/**/{system,module}.prop result/
          cp ./magisk_module_files/* result/

          zip $BASE_NAME.zip ./result/*

          echo "base_name=$BASE_NAME" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepare.outputs.base_name }}
          path: result
          if-no-files-found: error
